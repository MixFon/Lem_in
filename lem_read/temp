10
1 23 3
2 16 7
#comment
3 16 31
##end
end 16 52
5 9 3
6 1 5
7 4 8
##start
start 9 5
start-1
start-2
1-5
1-end
2-3
3-end
end-6
5-6
6-7
7-end
#another comment

Sum ways 2
cheack STEP
   Insetr:{start}
remove:[start]
   Insetr:{2}
   Insetr:{1}
remove:[2]
   Insetr:{3}
remove:[1]
   Insetr:{end}
   Insetr:{5}
remove:[3]
remove:[end]
Find!![end]
A333
cur_node {end}
edges {7}
edges {6}
edges {3}
edges {1}
2222
cur_node {1}
edges {end}
edges {5}
edges {start}
1111
asd fir_wie {start}
name = 1,    level  = 1 weight = 2 dfs {1}
Edges name = end
Edges name = 5
Edges name = start
name = 2,    level  = 1 weight = 5 dfs {1}
Edges name = 3
Edges name = start
name = 3,    level  = 2 weight = 3 dfs {1}
Edges name = end
Edges name = 2
name = end,    level  = 2 weight = 6 dfs {1}
Edges name = 7
Edges name = 6
Edges name = 3
Edges name = 1
name = 5,    level  = 2 weight = 3 dfs {1}
Edges name = 6
Edges name = 1
name = 6,    level  = 0 weight = 1 dfs {1}
Edges name = 7
Edges name = 5
Edges name = end
name = 7,    level  = 0 weight = 1 dfs {1}
Edges name = end
Edges name = 6
name = start,    level  = 0 weight = 5 dfs {1}
Edges name = 2
Edges name = 1
Delete 
Delete edges fir {start}, sec {1}
Lewel node fir  {start}, = {0}
Lewel node sec  {1}, = {1}
!iteration |end|
iteration |5|
iteration |start|
!iteration |2|
iteration |1|
Number fir {2}, sec {1}
cheack STEP
cur_step [7] pre_step [0]
pre_firn [start] pre_secn [1]
bl =  [0]
   Insetr:{start}
remove:[start]
   Insetr:{2}
remove:[2]
   Insetr:{3}
remove:[3]
   Insetr:{end}
remove:[end]
Find!![end]
A333
cur_node {end}
edges {7}
edges {6}
edges {3}
2222
cur_node {3}
edges {end}
edges {2}
2222
cur_node {2}
edges {3}
edges {start}
1111
A222
cheack STEP
cur_step [12] pre_step [7]
pre_firn [start] pre_secn [1]
bl =  [0]
bl =  [0]
HELLLLLLLLLLLLLLLLLLL
num = {1}
name {1}
11
i == 0
33
55
Edges name = 2
Edges name = 1
HEOOOOOOOOOOOOOOOOOOO
HELLLLLLLLLLLLLLLLLLL
num = {2}
name {start}
11
i == 0
11
i == 1
33
55
Edges name = end
Edges name = 5
Edges name = start
HEOOOOOOOOOOOOOOOOOOO
   Insetr:{start}
remove:[start]
   Insetr:{2}
   Insetr:{1}
remove:[2]
   Insetr:{3}
remove:[1]
   Insetr:{end}
   Insetr:{5}
remove:[3]
remove:[end]
Find!![end]
name = 1,    level  = 1 weight = 2 dfs {0}
Edges name = end
Edges name = 5
Edges name = start
name = 2,    level  = 1 weight = 5 dfs {0}
Edges name = 3
Edges name = start
name = 3,    level  = 2 weight = 3 dfs {0}
Edges name = end
Edges name = 2
name = end,    level  = 2 weight = 6 dfs {0}
Edges name = 7
Edges name = 6
Edges name = 3
Edges name = 1
name = 5,    level  = 2 weight = 3 dfs {0}
Edges name = 6
Edges name = 1
name = 6,    level  = 0 weight = 1 dfs {0}
Edges name = 7
Edges name = 5
Edges name = end
name = 7,    level  = 0 weight = 1 dfs {0}
Edges name = end
Edges name = 6
name = start,    level  = 0 weight = 5 dfs {0}
Edges name = 2
Edges name = 1
cur_node {end}
edges {7}
edges {6}
edges {3}
edges {1}
2222
cur_node {1}
edges {end}
edges {5}
edges {start}
1111
print_ways

Path 1:
Cout staps in way 2
Edges name = start
Edges name = 1
Edges name = end

Path 2:
Cout staps in way 3
Edges name = start
Edges name = 2
Edges name = 3
Edges name = end
print_ways

Path 1:
Cout staps in way 2
Edges name = start
Edges name = 1
Edges name = end

Path 2:
Cout staps in way 3
Edges name = start
Edges name = 2
Edges name = 3
Edges name = end
print_ways

Path 1:
Cout staps in way 2
Edges name = start
Edges name = 1
Edges name = end

Path 2:
Cout staps in way 3
Edges name = start
Edges name = 2
Edges name = 3
Edges name = end
count_ways 2
L1-1 L2-2 
L1-end L2-3 L3-1 L4-2 
L2-end L3-end L4-3 L5-1 L6-2 
L4-end L5-end L6-3 L7-1 L8-2 
L6-end L7-end L8-3 L9-1 L10-2 
L8-end L9-end L10-3 
L10-end 
ant->count_ant  10
ant->cur_steps  7
